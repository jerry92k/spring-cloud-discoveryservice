server:
  port: 8000

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        - name : GlobalFilter
          args:
            baseMessage: Spring cloud gateway global filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
          # lb: 를 사용하면 eureka 서버에서 application name으로 서비스를 이용
#          uri: lb://user-service
#          #uri: http://localhost:8081/
#          predicates:
#            - Path=/user-service/**
        - id: user-service
          uri: lb://user-service
            #uri: http://localhost:8081/
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://user-service
          #uri: http://localhost:8081/
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://user-service
          #uri: http://localhost:8081/
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: first-service
          # lb: 를 사용하면 eureka 서버에서 application name으로 서비스를 이용
          uri: lb://my-first-service
          #uri: http://localhost:8081/
          predicates:
            - Path=/first-service/**
          filters:
            - CustomFilter
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-request-header2
        - id: second-service
          uri: lb://my-second-service
          #uri: http://localhost:8082/
          predicates:
            - Path=/second-service/**
          filters:
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: This is logging filter
                preLogger: true
                postLogger: true
        - id: catalog-service
          uri: lb://catalog-service
          predicates:
            - Path=/catalog-service/**
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/order-service/**

token:
  secret: user_token